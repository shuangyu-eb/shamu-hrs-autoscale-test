AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CompanyDBClusterName:
    Type: String
  DocumentDBClusterName:
    Type: String
  SecretDBClusterName:
    Type: String
  CompanyDBInstanceName:
    Type: String
  DocumentDBInstanceName:
    Type: String
  SecretDBInstanceName:
    Type: String
  CompanyDatabaseName:
    Type: String
  DocumentDatabaseName:
    Type: String
  SecretDatabaseName:
    Type: String
  MasterUsername:
    Type: String
    NoEcho: true
  MasterUserPassword:
    Type: String
    NoEcho: true
  AvailabilityZone:
    Type: String
  DBInstanceClass:
    Type: String
  RdsSecurityGroupName:
    Type: String
  RdsWhiteListSecurityGroupGroupName:
    Type: String
  VpcId:
    Type: String
  VPCCIDR:
    Type: String
Resources:
  CompanyRDSCluster:
    # creates an Amazon Aurora DB cluster for company service
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Ref CompanyDBClusterName
      DatabaseName: !Ref CompanyDatabaseName
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      Engine: aurora
      VpcSecurityGroupIds: [!GetAtt RdsWhitelistSecurityGroup.GroupId]
      StorageEncrypted: true
  CompanyRDSDBInstance:
    # creates an Amazon RDS DB instance for company service
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora
      DBClusterIdentifier:
        Ref: CompanyRDSCluster
      DBInstanceIdentifier: !Ref CompanyDBInstanceName
      PubliclyAccessible: true
      AvailabilityZone: !Ref AvailabilityZone
      DBInstanceClass: !Ref DBInstanceClass
  DocumentRDSCluster:
    # creates an Amazon Aurora DB cluster for document service
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Ref DocumentDBClusterName
      DatabaseName: !Ref DocumentDatabaseName
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      Engine: aurora
      VpcSecurityGroupIds: [!GetAtt RdsSecurityGroup.GroupId]
      StorageEncrypted: true
  DocumentRDSDBInstance:
    # creates an Amazon RDS DB instance for document service
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora
      DBClusterIdentifier:
        Ref: DocumentRDSCluster
      DBInstanceIdentifier: !Ref DocumentDBInstanceName
      PubliclyAccessible: true
      AvailabilityZone: !Ref AvailabilityZone
      DBInstanceClass: !Ref DBInstanceClass
  SecretRDSCluster:
    # creates an Amazon Aurora DB cluster for secret storage
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Ref SecretDBClusterName
      DatabaseName: !Ref SecretDatabaseName
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      Engine: aurora
      VpcSecurityGroupIds: [!GetAtt RdsWhitelistSecurityGroup.GroupId]
      StorageEncrypted: true
  SecretRDSDBInstance:
    # creates an Amazon RDS DB instance for secret storage
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora
      DBClusterIdentifier:
        Ref: SecretRDSCluster
      DBInstanceIdentifier: !Ref SecretDBInstanceName
      PubliclyAccessible: true
      AvailabilityZone: !Ref AvailabilityZone
      DBInstanceClass: !Ref DBInstanceClass
  RdsSecurityGroup:
    # Specifies a vpc security group for rds cluster
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref RdsSecurityGroupName
      GroupDescription: RDS security group for Shamu HRS instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: !Ref VPCCIDR
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
  RdsWhitelistSecurityGroup:
    # Specifies a vpc security group for rds cluster
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref RdsWhiteListSecurityGroupGroupName
      GroupDescription: RDS with whitelist security group for Shamu HRS instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: !Ref VPCCIDR
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        # Auth0 IPs
        - CidrIp: 35.167.74.121/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 35.166.202.113/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 35.160.3.103/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 54.183.64.135/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 54.67.77.38/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 54.67.15.170/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 54.183.204.205/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 35.171.156.124/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 18.233.90.226/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
        - CidrIp: 3.211.189.167/32
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
Outputs:
  CompanyRdsEndpoint:
    Description: Company RDS endpoint
    Value: !GetAtt CompanyRDSDBInstance.Endpoint.Address
  DocumentRdsEndpoint:
    Description: Document RDS endpoint
    Value: !GetAtt DocumentRDSDBInstance.Endpoint.Address
  SecretRdsEndpoint:
    Description: secret RDS endpoint
    Value: !GetAtt SecretRDSDBInstance.Endpoint.Address
