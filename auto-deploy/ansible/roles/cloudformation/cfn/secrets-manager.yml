AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  DeployEnv:
    Type: String
    NoEcho: true
  SecretPrefix:
    Type: String
    NoEcho: true
  CompanyRdsUrl:
    Type: String
    NoEcho: true
  CompanyRdsDefaultSchema:
    Type: String
    NoEcho: true
  CompanyRdsTenantPrefix:
    Type: String
    NoEcho: true
  DocumentRdsUrl:
    Type: String
    NoEcho: true
  SecretRdsUrl:
    Type: String
    NoEcho: true
  RdsUserName:
    Type: String
    NoEcho: true
  RdsPassword:
    Type: String
    NoEcho: true
  SecretUserName:
    Type: String
    NoEcho: true
  SecretPassword:
    Type: String
    NoEcho: true
  SendGridApiKey:
    Type: String
    NoEcho: true
  Auth0ClientId:
    Type: String
    NoEcho: true
  Auth0ClientSecret:
    Type: String
    NoEcho: true
  Auth0Database:
    Type: String
    NoEcho: true
  Auth0Jwks:
    Type: String
    NoEcho: true
  Auth0Algorithm:
    Type: String
    NoEcho: true
  Auth0Domain:
    Type: String
    NoEcho: true
  Auth0AuthDomain:
    Type: String
    NoEcho: true
  Auth0ManagementIdentifier:
    Type: String
    NoEcho: true
  Auth0Issuer:
    Type: String
    NoEcho: true
  Auth0Connection:
    Type: String
    NoEcho: true
  RedisHost:
    Type: String
    NoEcho: true
  RedisPort:
    Type: String
    NoEcho: true
  Auth0CustomNamespace:
    Type: String
    NoEcho: true
  CryptoAHash:
    Type: String
    NoEcho: true
  IndeedClipUrl:
    Type: String
    NoEcho: true
  IndeedClipSecret:
    Type: String
    NoEcho: true
  CompanySentry:
    Type: String
    NoEcho: true
  DocumentSentry:
    Type: String
    NoEcho: true
  GatewaySentry:
    Type: String
    NoEcho: true
  DocumentDataSourceMaxConnections:
    Type: String
    NoEcho: true
  CompanyQuartzDatasourceDriver:
    Type: String
    NoEcho: true
  CompanyQuartzDatasourceUrl:
    Type: String
    NoEcho: true
  CompanyQuartzDatasourceUserName:
    Type: String
    NoEcho: true
  CompanyQuartzDatasourcePassword:
    Type: String
    NoEcho: true
  DocumentLegacyKmsArn:
    Type: String
    NoEcho: true
  PactsafeClientId:
    Type: String
    NoEcho: true
  PactsafeAccountId:
    Type: String
    NoEcho: true
  PactsafeAccessToken:
    Type: String
    NoEcho: true
  PactsafeBaseUrl:
    Type: String
    NoEcho: true
  DocumentDatasourceDriverClass:
    Type: String
    NoEcho: true
  DocumentDatasourceTemplateUrl:
    Type: String
    NoEcho: true
  DocumentDatasourceName:
    Type: String
    NoEcho: true
  DocumentFrontEndAddress:
    Type: String
    NoEcho: true
  ECSExecutionRole:
    Type: String
    NoEcho: true

Resources:
  CompanySecret:
  # creates a secret for company service and stores it in Secrets Manager
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${SecretPrefix}/company-service_${DeployEnv}
      SecretString:
          !Sub '{ ${CompanyRdsUrl}, ${CompanyRdsDefaultSchema}, ${CompanyRdsTenantPrefix}, ${SecretRdsUrl}, ${RdsUserName},
                  ${RdsPassword}, ${SecretUserName}, ${SecretPassword}, ${SendGridApiKey},
                  ${Auth0ClientId}, ${Auth0ClientSecret}, ${Auth0Database}, ${Auth0ManagementIdentifier},
                  ${Auth0Domain}, ${Auth0Issuer}, ${Auth0Connection}, ${CompanySentry}, ${CompanyQuartzDatasourceDriver},
                  ${CompanyQuartzDatasourceUrl}, ${CompanyQuartzDatasourceUserName}, ${CompanyQuartzDatasourcePassword}}'
  DocumentSecret:
  # creates a secret for document service and stores it in Secrets Manager
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${SecretPrefix}/document-service_${DeployEnv}
      SecretString:
          !Sub '{ ${DocumentRdsUrl}, ${RdsUserName}, ${RdsPassword},
                  ${DocumentSentry}, ${DocumentDataSourceMaxConnections}, ${DocumentLegacyKmsArn},
                  ${PactsafeClientId}, ${PactsafeAccountId}, ${PactsafeAccessToken},
                  ${PactsafeBaseUrl}, ${DocumentDatasourceDriverClass}, ${DocumentDatasourceTemplateUrl},
                  ${DocumentDatasourceName}, ${DocumentFrontEndAddress}, ${ECSExecutionRole}}'
  GatewaySecret:
    # creates a secret for document service and stores it in Secrets Manage
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${SecretPrefix}/gateway_${DeployEnv}
      SecretString:
        !Sub '{ ${GatewaySentry} }'
  LoggingSecret:
  # creates a secret for logging service and stores it in Secrets Manager
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${SecretPrefix}/logging-service_${DeployEnv}
      SecretString:
        !Sub '{ ${IndeedClipUrl}, ${IndeedClipSecret} }'
  ApplicationSecret:
  # creates a secret for application and stores it in Secrets Manager
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${SecretPrefix}/application_${DeployEnv}
      SecretString:
          !Sub '{ ${Auth0Jwks}, ${Auth0Algorithm}, ${Auth0AuthDomain},
                  ${RedisHost}, ${RedisPort}, ${Auth0CustomNamespace},
                  ${CryptoAHash}
                }'
Outputs:
  CompanySecretArn:
    Value: !Ref CompanySecret
  DocumentSecretArn:
    Value: !Ref DocumentSecret
  GatewaySecretArn:
    Value: !Ref GatewaySecret
  LoggingSecretArn:
    Value: !Ref LoggingSecret
  ApplicationSecretArn:
    Value: !Ref ApplicationSecret
